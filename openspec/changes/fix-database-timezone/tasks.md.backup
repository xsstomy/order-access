# 数据库时区修正任务清单

## 阶段1：准备和备份
- [ ] 创建数据库备份脚本
- [ ] 执行完整数据库备份
- [ ] 创建回滚脚本
- [ ] 设置开发环境测试

## 阶段2：数据库层修改
- [ ] 修改 `DatabaseManager.connect()` 添加时区配置
- [ ] 创建北京时间函数 `beijing_timestamp()`
- [ ] 测试数据库时区配置是否生效
- [ ] 验证新记录时间戳为北京时间

## 阶段3：应用层时间处理
- [ ] 在 `OrderOperations` 类中添加时间处理工具方法
- [ ] 修改 `create24HourAccessWindow()` 方法使用北京时间
- [ ] 更新 `recordOrderUsage()` 方法使用北京时间
- [ ] 修改设备绑定相关操作使用北京时间
- [ ] 统一所有时间戳格式化逻辑

## 阶段4：数据迁移脚本
- [ ] 创建现有时间戳数据迁移脚本
- [ ] 编写 UTC 转北京时间 (+8小时) 转换逻辑
- [ ] 添加迁移进度显示和错误处理
- [ ] 创建迁移后数据验证脚本

## 阶段5：表结构更新
- [ ] 更新 `multi_orders` 表默认时间戳
- [ ] 更新 `device_bindings` 表默认时间戳
- [ ] 更新 `order_usage` 表默认时间戳
- [ ] 处理 24小时窗口期表时间字段
- [ ] 验证所有表结构更新正确

## 阶段6：执行数据迁移
- [ ] 在测试环境执行迁移脚本
- [ ] 验证测试环境数据正确性
- [ ] 在生产环境执行迁移脚本
- [ ] 验证生产环境数据正确性
- [ ] 检查所有功能正常运行

## 阶段7：前端时间显示
- [ ] 更新管理界面时间显示逻辑
- [ ] 更新用户界面时间显示逻辑
- [ ] 确保时间格式统一为北京时间
- [ ] 测试所有时间显示功能

## 阶段8：功能测试
- [ ] 测试新订单创建时间正确
- [ ] 测试访问记录时间正确
- [ ] 测试设备绑定时间正确
- [ ] 测试24小时窗口期计算正确
- [ ] 测试历史数据显示正确

## 阶段9：验证和清理
- [ ] 全面验证系统功能正常
- [ ] 性能测试确保无回归
- [ ] 清理临时文件和脚本
- [ ] 更新相关文档
- [ ] 创建时区处理使用指南

## 验收标准
- ✅ 新记录时间戳为北京时间
- ✅ 现有数据正确转换为北京时间
- ✅ 前端界面显示正确时间
- ✅ 24小时窗口期计算使用北京时间
- ✅ 所有时区相关功能正常工作
- ✅ 数据完整性和一致性保持